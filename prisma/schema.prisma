// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

//   Products, Orders, Buy, Sales, Employees 

model User {
  id              String    @id @default(cuid())
  name            String
  email           String    @unique
  password        String
  oneTimePassword String?
  contact_number  String
  created_at      DateTime  @default(now())
  updated_at      DateTime  @updatedAt
  roleId          String
  role            Role      @relation(fields: [roleId], references: [id])
  businessId      String
  business        Business  @relation(fields: [businessId], references: [id])
  sales           Sale[]
  toBuy           ToBuy[]
  products        Product[]
}

model Role {
  id        String @id @default(cuid())
  role_name String @unique
  users     User[]
}

model Business {
  id             String     @id @default(cuid())
  name           String
  email          String     @unique
  description    String?
  contact_number String?
  created_at     DateTime   @default(now())
  updated_at     DateTime   @updatedAt
  users          User[]
  products       Product[]
  sales          Sale[]
  toBuy          ToBuy[]
  orders         Order[]
  categories     Category[]
}

model Product {
  id           String   @id @default(cuid())
  product_name String
  product_code String   @unique
  quantity     Int
  price        Int
  description  String
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
  categoryId   String
  category     Category @relation(fields: [categoryId], references: [id])
  buyerId      String
  buyer        User     @relation(fields: [buyerId], references: [id])
  businessId   String
  business     Business @relation(fields: [businessId], references: [id])
  sales        Sale[]
  orders       Order[]
}

model Category {
  id            String    @id @default(cuid())
  category_name String
  category_code String    @unique
  businessId    String
  business      Business  @relation(fields: [businessId], references: [id])
  products      Product[]
  toBuys        ToBuy[]
}

model ToBuy {
  id            String   @id @default(cuid())
  product_name  String
  product_price Int
  product_code  String   @unique
  quantity      Int
  buy_from      String
  deadline_date DateTime
  description   String
  created_at    DateTime @default(now())
  categoryId    String
  category      Category @relation(fields: [categoryId], references: [id])
  buyerId       String
  buyer         User     @relation(fields: [buyerId], references: [id])
  businessId    String
  business      Business @relation(fields: [businessId], references: [id])
}

model Sale {
  id            String   @id @default(cuid())
  sold_price    Int
  sold_quantity Int
  sellerId      String
  seller        User     @relation(fields: [sellerId], references: [id])
  productId     String
  product       Product  @relation(fields: [productId], references: [id])
  created_at    DateTime @default(now())
  soldTo        SoldTo?
  businessId    String
  business      Business @relation(fields: [businessId], references: [id])
}

model SoldTo {
  id             String @id @default(cuid())
  name           String
  email          String
  contact_number String
  saleId         String @unique
  sale           Sale   @relation(fields: [saleId], references: [id])
}

model Order {
  id                      String   @id @default(cuid())
  productId               String
  order_quantity          Int
  product                 Product  @relation(fields: [productId], references: [id])
  customer_name           String
  customer_email          String
  customer_contact_number String
  created_at              DateTime @default(now())
  businessId              String
  business                Business @relation(fields: [businessId], references: [id])
}
